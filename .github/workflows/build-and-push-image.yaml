# quckoo-org/api-tips-workflows/.github/workflows/build-and-push-image.yaml@master
name: 'Build and push docker image'

on:
  workflow_call:
    outputs:
      image_version:
        description: "Image version"
        value: ${{ jobs.image_build_and_push.outputs.image_version }}
      short_sha:
        description: "Short sha"
        value: ${{ jobs.image_build_and_push.outputs.short_sha }}
    inputs:
      environment:
        type: string
        required: true
    secrets:
      HARBOR_ROBOT_TOKEN:
        required: true
      JWT_SECRET_KEY:
        required: false
      KUBE_CONFIG:
        required: false
      POSTGRES_PASSWORD:
        required: false
      REDIS_PASSWORD:
        required: false
      SMTP_PASSWORD:
        required: false

jobs:
  image_build_and_push:
    runs-on: self-hosted
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && !cancelled() }}
    outputs:
      short_sha: ${{ steps.short_sha_step.outputs.sha }}
      image_version: ${{ steps.set_image_version.outputs.image_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to [Harbor]
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_HOST }}
          username: ${{ vars.HARBOR_ROBOT_NAME }}
          password: ${{ secrets.HARBOR_ROBOT_TOKEN }}

      - name: Get short sha
        uses: benjlevesque/short-sha@v2.1
        id: short_sha_step
        with:
          length: 7

      - name: Set [short_sha] in [GITHUB_OUTPUT]
        run: |
          echo "short_sha set up to [${{ steps.short_sha_step.outputs.sha }}]" >> "$GITHUB_STEP_SUMMARY"

      - name: Debug
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}"

      - name: Build and push Docker image [Development version]
        if: ${{ inputs.environment == 'development' && github.ref_type != 'tag' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "SHA_COMMIT=${{ steps.short_sha_step.outputs.sha }}"
            "BRANCH_NAME=${{ github.ref_name }}"
            "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
            "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}"
            "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}"
            "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}"
          push: true
          tags: ${{ vars.HARBOR_HOST }}/${{ vars.HARBOR_PROJECT_NAME }}/${{ vars.APPLICATION_NAME }}:${{ steps.short_sha_step.outputs.sha }}-dev, ${{ vars.HARBOR_HOST }}/${{ vars.HARBOR_PROJECT_NAME }}/${{ vars.APPLICATION_NAME }}:latest-dev

      - name: Build and push Docker image [Stage version]
        if: ${{ inputs.environment == 'stage' && github.ref_type == 'tag' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "SHA_COMMIT=${{ steps.short_sha_step.outputs.sha }}"
            "BRANCH_NAME=${{ github.ref_name }}"
            "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
            "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}"
            "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}"
            "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}"
          push: true
          tags: ${{ vars.HARBOR_HOST }}/${{ vars.HARBOR_PROJECT_NAME }}/${{ vars.APPLICATION_NAME }}:${{ steps.short_sha_step.outputs.sha }}-stage, ${{ vars.HARBOR_HOST }}/${{ vars.HARBOR_PROJECT_NAME }}/${{ vars.APPLICATION_NAME }}:latest-stage

      - name: Build and push Docker image [Production version]
        if: ${{ inputs.environment == 'production' && github.ref_type == 'tag' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "SHA_COMMIT=${{ steps.short_sha_step.outputs.sha }}"
            "VERSION_TAG=${{ github.ref_name }}"
            "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
            "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}"
            "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}"
            "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}"
          push: true
          tags: ${{ vars.HARBOR_HOST }}/${{ vars.HARBOR_PROJECT_NAME }}/${{ vars.APPLICATION_NAME }}:${{ github.ref_name }}, ${{ vars.HARBOR_HOST }}/${{ vars.HARBOR_PROJECT_NAME }}/${{ vars.APPLICATION_NAME }}:latest

      - name: Print image version
        id: set_image_version
        run: |
          if [[ "${{ inputs.environment }}" == "production" && "${{ github.ref_type }}" == "tag" ]]; then
            echo "image_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "Image [${{ inputs.environment }}] version is [${{ github.ref_name }}]" >> "$GITHUB_STEP_SUMMARY"
          else if [[ "${{ inputs.environment }}" == "stage" && "${{ github.ref_type }}" == "tag" ]]; then
            echo "image_version=${{ steps.short_sha_step.outputs.sha }}-stage" >> $GITHUB_OUTPUT
            echo "Image [${{ inputs.environment }}] version is [${{ steps.short_sha_step.outputs.sha }}-stage]" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "image_version=${{ steps.short_sha_step.outputs.sha }}-dev" >> $GITHUB_OUTPUT
            echo "Image [${{ inputs.environment }}] version is [${{ steps.short_sha_step.outputs.sha }}-dev]" >> "$GITHUB_STEP_SUMMARY"
          fi
